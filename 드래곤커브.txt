
#include<stdio.h>
using namespace std;

int arr[100000];
int map[101][101] = {0,};
int x, y, d, g;
int inx = 0;

void generate(int cnt) {
	while (cnt<g) {

		int ny = arr[inx] / 1000;
		int nx = arr[inx] % 1000;
		if (arr[inx] - arr[inx - 1] == 1) 
			ny -= 1;

		else if (arr[inx] - arr[inx - 1] == 1000) 
			nx += 1;

		else if (arr[inx] - arr[inx - 1] == -1) 
			ny += 1;
		
		else
			nx -= 1;
		

		arr[++inx] = ny * 1000 + nx;
		map[ny][nx] = 1;


		if (inx - 2 != 0) {
			for (int i = inx - 2; i > 0; i--) {
				int ny = arr[inx] / 1000;
				int nx = arr[inx] % 1000;

				if (arr[i] - arr[i - 1] == 1000)
					nx += 1;
				
				else if (arr[i] - arr[i - 1] == 1) 
					ny -= 1;

				else if (arr[i] - arr[i - 1] == -1000) 
					nx -= 1;

				else 
					ny += 1;

				arr[++inx] = ny * 1000 + nx;
				map[ny][nx] = 1;
			}
		}
		cnt++;
	}
	return;
}
int main() {
	int n;
	int ret = 0;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d %d %d %d", &x, &y, &d, &g);

		map[y][x] = 1;
		arr[inx++] = y * 1000 + x;
		if (d == 0) {
			map[y][x + 1] = 1;
			arr[inx] = y * 1000 + (x + 1);
		}
		else if (d == 1) {
			map[y - 1][x] = 1;
			arr[inx] = (y - 1) * 1000 + x;
		}
		else if (d == 2) {
			map[y][x - 1] = 1;
			arr[inx] = y * 1000 + (x - 1);
		}
		else {
			map[y + 1][x] = 1;
			arr[inx] = (y + 1) * 1000 + x;
		}

		generate(0);
		for (int j = 0; j <= inx; j++)arr[j] = 0;
		inx = 0;
	}
	for (int i = 0; i < 101; i++) {
		for (int j = 0; j < 101; j++) {
			if (map[i][j] == 1) {
				int ret_tmp = 1;
				if (j < 100 && map[i][j + 1] == 1) ret_tmp++;
				if (i < 100 && map[i + 1][j] == 1)ret_tmp++;
				if (i< 100 && j < 100 && map[i + 1][j + 1] == 1)ret_tmp++;
				if (ret_tmp == 4) ret++;
			}
		}
	}

	printf("%d", ret);
	return 0;
}
