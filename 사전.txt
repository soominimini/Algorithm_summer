#include<stdio.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int tn, tm;
#define MAX 1000000001
int k;
ll dp[201][201] = { 0, };

void func(int n, int m, int k, int len) {
	if (len == 0)return;

	if (n == 0) {
		printf("z");
		func(n,m-1, k- dp[m+n-1][m],len-1);
	}
	else if (m == 0) {
		printf("a");
		func(n-1, m, k, len-1);
	}
	else if (dp[m + n - 1][m] >= k) {
		printf("a");
		func(n-1, m, k, len-1);
	}
	else {
		printf("z");
		func(n, m-1, k- dp[m+n-1][m], len-1);
	}
	return;
}

int main() {
	scanf("%d %d %d", &tn, &tm, &k);

	for (int i = 0; i < 201; i++) {
		dp[i][0] = 1;
		for (int j = 1; j <= i; j++) {
			dp[i][j] = min(dp[i - 1][j - 1] + dp[i - 1][j],(ll) MAX);
		}
	}

	int n = tn;
	int m = tm;
	int len = n + m;
	int init = dp[len][n];

	if (k > init) {
		printf("-1");
		return 0;
	}

	else {
		func(n,m,k, len);
	}

	return 0;
}

